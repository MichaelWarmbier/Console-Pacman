
					Console Pacman Documentation

		Sprite IDs

	(SPRITE SECTION BEING REVAMPED, TO BE WRITTEN)

		Primary Functions

void MenuSetup(); 
	-- Sets up the variables necessary for each encounter of the Main Menu
void MenuDraw();
	-- Draws most or all of the visuals related to the Main Menu
void MenuInput();
	-- Detects and organizes most or all input events for the Main Menu
void MenuLogic();
	-- Applies logic necessary for the Main Menu
void GameSetup();
	-- Sets up variables necessary for each encounter of the Game
void GameDraw();
	-- Draws most or all of the visuals related to the Game
void GameInput();
	-- Detects and organizes most of all input events for the Game
void GameLogic();
	-- Applies logic necessary for the Game

		Secondary Functions

void DrawSprite(const int[8][8], int, int, int);
	-- Takes the arguments of an 8x8 sprite, it's rotation value and it's x and y positions and uses
	   arguments in conjuntion to draw the sprite
void DrawPacman(const int[8][8], int, int, int );
	-- Takes the arguments of an 8x8 sprite, it's rotation value and it's x and y positions and uses
	   arguments in conjuntion to draw the sprite, specifically Pacman related
void DrawChar(const int [CharacterSize][CharacterSize], int, int, COLORREF);
	-- Draws a character using it's sprite of CharacterSize variable dimensions taking arguments of
	   the sprite, it's x and y position and text color
void DrawMap(int X_pos, int Y_pos);
	-- Draws the map using the Map 2D array, taking arguments of an offset y and x distance
void DrawLogo();
	-- Draws the logo at a predetermined position
void DrawReady(bool);
	-- Draws READY! text when argument is true at a predetermined position
void ClearArrows();
	-- Used on the Main Menu for clearing all drawn arrow sprites when the SelectedOption variable
	   has changed
bool CollisionCheck(input dir);
	-- Takes an argument of the last input received by the user and checks in the direction of that input
	   for collision and returns true or false
bool CheckForDot(input dir);
	-- Takes an argument of the last input received by the user and checks in the direction of that input
	   for a dot sprite value and returns true or false
bool KeyIsDown(char key, bool, bool);
	-- Checks if a key is down, taking the arguments of the character value, a bool determining the check
	   for if it was pressed, and a bool determining the same if it was held, returning true or false
double GetTime();
	-- Determines the system clock time and returns it's value in seconds
double GetTimeSince(double);
	-- Determines and returns the time since a given clock time in seconds, received through the argument
double wait(double);
	-- Halts runtime for the specified amount of time, in seconds, then returns the current time
void ShowConsoleCursor(bool showFlag);
	-- Takes an argument to determine whether or not the console cursor should be visible
void MovePacman(input dir);
	-- Takes an argument of the last input received by the user and moves Pacman accordingly
void ChangePhase();
	-- Updates Pacmans current phase
COLORREF GetColor(int color_data);
	-- Returns a COLORREF (RGB) value dependent on the integer argument
